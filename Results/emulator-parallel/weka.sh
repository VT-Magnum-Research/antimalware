#!/bin/sh
#
# Runs various classifiers on data. This should be in
# a directory with testing and training information
#
# Brandon Amos
# 2012.08.23

WEKA=/usr/share/java/weka/weka.jar
JAVA="java -Xmx5g -cp $WEKA"

# createModel <classifier> <options>
function createModel {
    CLASSIFIER=$1
    OPTIONS=$2
    MODEL=`echo $CLASSIFIER | sed 's/.*\.//'`

    echo Creating the $MODEL classifier

    cd Models
    $JAVA $CLASSIFIER -t ../Training.arff -d $MODEL.model $OPTIONS &> /dev/null
    cd ..
}

# getResults <classifier>
function getResults {
    CLASSIFIER=$1
    MODEL=`echo $CLASSIFIER | sed 's/.*\.//'`

    if [[ ! -f Models/$MODEL.model ]]; then
        echo "Error: $MODEL.model not found!"
        return 42;
    fi

    echo Evaluating the $MODEL classifier
    $JAVA $CLASSIFIER \
        -l Models/$MODEL.model \
        -T Testing.arff \
        > TestResults/full-results-$MODEL.txt

    $JAVA $CLASSIFIER \
        -t Training.arff \
        > TestResults/cv-full-results-$MODEL.txt 2&>1

    cd Testing
    for file in $(find . -name '*.arff'); do
        $JAVA $CLASSIFIER \
            -l ../Models/$MODEL.model \
            -T $file \
            > $file.results
    done

    echo Combining results
    cd ../TestResults
    rm -rf $MODEL
    mkdir $MODEL
    cd $MODEL

    find ../../Testing -name '*.results' -exec mv {} . \;

    for file in $(find . -name '*.results'); do
        echo $file >> results-$MODEL.txt
        grep -A 1 "Correctly Classified Instances" $file \
            >> results-$MODEL.txt
        echo >> results-$MODEL.txt
    done
    
    cd ../..
}

function modelFactory {
    echo Creating classifiers from the training data set
    
    createModel weka.classifiers.bayes.BayesNet \
        "-D -Q weka.classifiers.bayes.net.search.local.K2 -- -P 1 -S BAYES
        -E weka.classifiers.bayes.net.estimate.SimpleEstimator
        -- -A 0.5"
    createModel weka.classifiers.bayes.NaiveBayes 
    createModel weka.classifiers.functions.Logistic "-R 1.0E-8 -M -1"
    createModel weka.classifiers.functions.MultilayerPerceptron \
        "-L 0.3 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H a"
    createModel weka.classifiers.trees.J48 "-C 0.25 -M 2"
    createModel weka.classifiers.trees.RandomForest \
        "-I 10 -K 0 -S 1 -num-slots 1"
}

function combineAllResults {
    echo "Combining all of the results"
    
    cd TestResults
    
    for file in $(find . -name 'full-results-*'); do
        echo $file >> full-results.txt
        grep -A 1 "Correctly Classified Instances" $file \
            >> full-results.txt
        echo >> full-results.txt
    done
    
    cd ..
}

function resultsFactory {
    echo Evaluating the classifiers from the testing data set
    
    rm -f full-results.txt
    
    for classifier in "${classifiers[@]}"; do
        getResults $classifier
    done
    
    combineAllResults
}


#########
# Start #
#########

declare -a classifiers=(
    weka.classifiers.bayes.BayesNet
    weka.classifiers.bayes.NaiveBayes
    weka.classifiers.functions.Logistic
    weka.classifiers.functions.MultilayerPerceptron
    weka.classifiers.trees.J48
    weka.classifiers.trees.RandomForest
)

if [[ $1 == "Training" ]]; then
    rm -rf Models
    mkdir -p Models
    
    modelFactory
    if [ -e Testing.arff ]; then
        rf -rf TestResults
        mkdir -p TestResults

        resultsFactory
    fi
elif [[ $1 == "Testing" ]]; then
    rm -rf TestResults
    mkdir -p TestResults
    
    resultsFactory
else
    echo "Usage: ./weka.sh <Testing/Training>"
    exit 1
fi
