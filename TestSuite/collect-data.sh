#!/bin/sh
#
# collect-data.sh
# Installs, tests, and uninstalls various apks for malware analysis.
#
# Brandon Amos
# 2012.08.10

trap handleInt INT

# Gather the separately collected arff files.
function gatherArff {
    echo Combining and archiving the arff files
    cd ../arff/$MODE
    mv ../$MODE.arff . &> /dev/null

    echo Getting the header from a random arff file
    sed '1,/@data/!d' `find . -name '*.arff' | head -1` > tmpTotal.txt

    echo Looping through arff files to combine them
    for file in $(find . -name '*.arff'); do
        echo $file
        
        # Delete the header
        sed '1,/@data/d' $file > tmpArff.txt

        # Delete the first line because its always positive
        sed '1d' tmpArff.txt >> tmpTotal.txt
        echo >> tmpTotal.txt
    done

    echo Removing and cleaning
    rm -f tmpArff.txt $MODE.arff
    mv tmpTotal.txt ../$MODE.arff
    cd ..
}

# partitionDir <Testing/Training> <Number of Partitions>
function partitionDir {
    partitions=$2
    
    echo "Partitioning $1 into $partitions subdirectorie(s)"
    
    cd $1
    numFiles=`ls *apk | wc -l`
    let 'partitionSize = (numFiles + partitions - 1)/partitions' # Ceiling

    for ((i=1; i<=$partitions; i++)); do
        partDir="partition$i"
        mkdir -p $partDir
        for file in $(ls *apk | head -$partitionSize); do
             mv $file $partDir/
        done
    done
    
    cd ..
}

# unpartitionDir <Testing/Training>
function unpartitionDir {
    cd $1
    
    echo Unpartitioning $1
    
    for file in $(find . -name '*apk'); do
        mv $file .
    done

    rm -rf partition* 
    cd ..
}

function startCollection {
    i=1
    
    for device in "${devices[@]}"; do
        ./collect-data-device.sh $MODE $device $i | tee logs/dev$i.txt &
        let 'i+=1'
    done
}

function handleInt {
    unpartitionDir $MODE
    pkill collect-data;
}

#########
# Start #
#########

if [[ $# != 1 || ( $1 != "Training" && $1 != "Testing" ) ]]; then
    echo "Usage: ./collect-data.sh <Testing/Training>"
    exit 1
fi

echo Preparing directories
rm -rf ./logs/*
mkdir -p logs

MODE=$1

declare -a devices=('30310772B0DC00EC');
declare -a emulators=();
let "partitions = ${#devices[@]} + ${#emulators[@]}"

partitionDir $MODE $partitions

startCollection

# Wait for all of the backgrounded scripts to finish
wait ${!}

unpartitionDir $MODE

gatherArff

./weka.sh $MODE

exit 0
