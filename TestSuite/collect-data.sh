#!/bin/bash
#
# collect-data.sh
# Installs, tests, and uninstalls various apks for malware analysis.
#
# Brandon Amos
# 2012.08.10

source helper.sh
trap handleInt INT

# Gather the separately collected arff files.
function gatherArff {
    msg Combining and archiving the arff files
    cd ../arff/$MODE
    mv ../$MODE.arff . &> /dev/null

    msg Getting the header from a random arff file
    sed '1,/@data/!d' `find . -name '*.arff' | head -1` > tmpTotal.txt

    msg Looping through arff files to combine them
    for file in $(find . -name '*.arff'); do
        msg $file
        
        # Delete the header
        sed '1,/@data/d' $file > tmpArff.txt

        # Delete the first line because its always positive
        sed '1d' tmpArff.txt >> tmpTotal.txt
        echo >> tmpTotal.txt
    done

    msg Removing and cleaning
    rm -f tmpArff.txt $MODE.arff
    mv tmpTotal.txt ../$MODE.arff
    cd ..
}

function startCollection {
    i=1
    
    for device in "${devices[@]}"; do
        ./collect-data-device.sh $MODE $device $i | tee logs/dev$i.txt &
        let 'i+=1'
    done
    
    for (( j=0; j<$EMULATORS; j++ )); do
        let 'PORT=5554+2*j'
        ./collect-data-emulator.sh $MODE $PORT $i | tee logs/emu$i.txt &
        let 'i+=1'
    done
}

function handleInt {
    unpartitionDir $MODE
    pkill collect-data;
    pkill weka.sh;
}

#########
# Start #
#########

if [[ $1 != "Training" && $1 != "Testing" ]]; then
    die 1 "Usage: ./collect-data.sh <Testing/Training>"
fi

msg Preparing directories
rm -rf ./logs/*
mkdir -p logs

MODE=$1

#declare -a devices=('30310772B0DC00EC');
declare -a devices=();
EMULATORS=1 # No more than 15!
let "partitions = ${#devices[@]} + $EMULATORS"

partitionDir $MODE $partitions
startCollection
wait ${!}
unpartitionDir $MODE

gatherArff
./weka.sh $MODE

exit 0
