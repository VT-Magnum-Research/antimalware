#!/bin/bash
#
# collect-data-emulator.sh
# Installs, tests, and uninstalls apks for malware analysis on
# an emulated device. 
#
# Brandon Amos
# 2012.09.30

source helper.sh

function adbTimeout {
    timeout 60 $ADB $@
    if [[ $? != 0 ]]; then
        msg "Command '$ADB $@' timed out.
        Restarting emulator and retrying"
        restartEmulator
        adbTimeout $@
    fi
}

function createAVD {
    android create avd -n $SERIAL \
        -t "Google Inc.:Google APIs:16" \
        -p AVDs/$SERIAL --skin HVGA \
        --force
    cp AVDs/sdcard.img AVDs/$SERIAL/
}

function restartEmulator {
    if [[ -n `$ADB devices | grep $SERIAL` ]]; then
        msg Killing emulator process
        $ADB emu kill
        sleep 5
    fi
    
    emulator-arm -port $PORT -avd $SERIAL \
        -sdcard AVDs/$SERIAL/sdcard.img \
        -noaudio -wipe-data \
        -no-boot-anim -no-window \
        -no-snapshot -http-proxy 0.0.0.0:0 &
    
    $ADB wait-for-device
    $ADB logcat | grep -q -m 1 "Boot is finished"
    
    msg Importing contacts
    $ADB shell am start -a android.intent.action.MAIN \
        -n com.android.contacts/.activities.PeopleActivity
    timeout 20 $ADB logcat | grep -q -m 1 \
        "Displayed com.android.contacts"
    sendKey $ADB_DOWN 3
    sendKey $ADB_CLICK 1
    sendKey $ADB_DOWN 3
    sendKey $ADB_CLICK 1
    sendKey $ADB_DOWN 1
    sendKey $ADB_CLICK 1
    sendKey $ADB_BACK 1
    sleep 5

    msg Syncing Google Account
    $ADB shell am start -a android.intent.action.MAIN \
        -n com.android.settings/.Settings
    sendKey $ADB_DOWN 16
    sendKey $ADB_CLICK 1
    sendKey $ADB_DOWN 3
    sendKey $ADB_CLICK 1
    sleep 10
    sendKey $ADB_CLICK 1
    $ADB shell input text "magnum.antimalware@gmail.com"
    sendKey $ADB_DOWN 1
    $ADB shell input text "antimalware"
    sendKey $ADB_RIGHT 2
    sendKey $ADB_CLICK 1
    sendKey $ADB_RIGHT 4
    sendKey $ADB_CLICK 1
    timeout 20 $ADB logcat | grep -q -m 1 "Checkin success"
    sendKey $ADB_DOWN 2
    sendKey $ADB_CLICK 1
    
    msg Installing the antimalware application
    if [[ $MODE == "Remote" ]]; then
        adbTimeout install Antimalware/bin/Antimalware.apk
    else
        adbTimeout install ../Antimalware/bin/Antimalware.apk
    fi
}

function deleteAVD {
    $ADB emu kill
    android delete avd -n $SERIAL
}

function testBenign {
    COUNT=0;
    ls $MODE/partition$PARTITION/B*apk | while read APPLICATION; do
        if (( COUNT % 10 == 0 )); then # Not $COUNT
            restartEmulator
        fi;
        monkeyTest $APPLICATION $DELAY
        let COUNT=COUNT+1
    done
}

function testMalicious {
    ls $MODE/partition$PARTITION/M*apk | while read APPLICATION; do
        restartEmulator
        monkeyTest $APPLICATION $DELAY
    done
}

#########
# Start #
#########

if [[  $1 != "Training" && $1 != "Testing" && $1 != "Remote" ]]; then
    msg "Usage: ./collect-data-emulator.sh <Mode>
           <port number> <partition number>"
    exit 1
fi

msg Setting the mode to $1 for emulator-$2
MODE=$1
PORT=$2
SERIAL=emulator-$PORT
PARTITION=$3

ADB="adb -s $SERIAL "
FASTBOOT="fastboot -s $SERIAL "

createAVD # Start the emulator later

msg Setting the event delay to 450 milliseconds
DELAY=450 # Random: $(( ($RANDOM % 1501) + 250 ))

testBenign
testMalicious
$ADB emu kill

exit 0
