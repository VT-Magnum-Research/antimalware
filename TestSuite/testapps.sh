#!/bin/sh
#
# Installs, tests, and uninstalls various apks for malware analysis.
#
# Brandon Amos
# 2012.08.10

# Just in case the adb command isn't available or multiple
# emulators are running
ADB=adb

# installAndMonkeyTest <apk name> <package name> <delay>
function installAndMonkeyTest {
    # System applications that don't need to be installed
    # are passed to this without the .apk extension
    if [[ $1 == *.apk ]]; then
        echo Installing application $1
        $ADB install $1
    fi

    startAntimalware $1
    
    echo Monkey testing application $2
    $ADB shell monkey -p $2 --throttle $3 1200
    #$ADB shell monkey -p $2 100

    stopAntimalware $1
    
    if [[ $1 == *.apk ]]; then
        echo Uninstalling package $2
        $ADB uninstall $2
    fi
}

# startAntimalware <apk name>
function startAntimalware {
    echo Starting the antimalware application
    $ADB shell am start -a android.intent.action.MAIN \
        -n org.vt.magnum.malware.main/.MalwareActivity

    # Let the application start 
    sleep 5

    # Detect the classification from the name
    if [[ $1 == M* ]]; then
        CLASS=negative
    else
        CLASS=positive
    fi

    echo Setting the classification to $CLASS
    $ADB shell "echo $CLASS > /sdcard/magnum/classification"
}

# Stops the antimalware application and pulls the arff file
# stopAntimalware <apk name>
function stopAntimalware {
    echo Pulling the arff for $1
    $ADB pull /sdcard/magnum/malware.arff ../arff/tmp/$1.arff

    echo Stopping the antimalware application
    $ADB shell am force-stop "org.vt.magnum.malware.main"
}

# Combines the separately collected arff files.
function combineArff {
    echo Combining the arff files
    cd ../arff/tmp/
    TIME=$(date +"%Y-%m-%d-%H-%M")

    # Get the header from a random arff file
    sed '1,/@data/!d' `ls | head -1` > tmpTotal.txt

    # Looping through arff files to combine them
    for file in *.arff
    do
        # Delete the header
        sed '1,/@data/d' $file > tmpArff.txt

        # Delete the first line because it's always positive
        sed '1d' tmpArff.txt >> tmpTotal.txt
        echo >> tmpTotal.txt
    done

    rm tmpArff.txt
    mv tmpTotal.txt ../malware-$TIME.arff
}

declare -a appNames=(
    'M1-iMatch.apk          com.mj.iMatch'
    'M2-3DCube.apk          com.RZStudio.game.cube'
    'M3-Hpynotic.apk        com.magic.spiral'
    'M4-SSP.apk             com.droiddream.lovePositions'
    'M5-Steam.apk           com.appspot.swisscodemonkeys.steam'


    'M6-iCalendar.apk       com.mj.iCalendar'
    'M7-Snake.apk           net.maxicom.android.snake'
    'M8-VideoBrowser.apk    com.ku6.android.videobrowser'
    'M9-Pushme.apk          pushme.android'
    'M10-Thouch.apk         appinventor.ai_joopdamen91.dont_thouch_lite'

    'B1-Compass.apk         com.devuni.compass'
    'B2-System-Calculator   com.android.calculator2'
    'B3-System-Calendar     com.android.calendar'
    'B4-System-Browser      com.android.browser'
    'B5-GlowHockey.apk      com.natenai.glowhockey'

    'B6-ContactPro.apk      com.jbapps.contactpro'
    'B7-ParkingCar.apk      com.mouseandroidgames.unblock'
    'B8-PoolMaster.apk      com.forthblue.pool'
    'B9-TicTacToe.apk       com.tictactoe.wintrino'
    'B10-ScientificCalc.apk com.kreactive.calculator'
)

#########
# Start #
#########

echo Cleaning up the temporary directory
rm -rf ../arff/tmp/*

echo Uninstalling the antimalware application, if it exists
$ADB uninstall org.vt.magnum.malware.main

echo Installing the antimalware application
$ADB install ../Antimalware/bin/Antimalware.apk

lastIndex=$(( ${#appNames[*]} - 1 ))
delay=$(( ($RANDOM % 751) + 250 ))

# Calculate the last index in the array and shuffle the indexes
# to randomly test all of the apks
for i in `shuf --input-range=0-$lastIndex`
do
    monkeyTest ${appNames[$i]} $delay
done

combineArff

exit 0
