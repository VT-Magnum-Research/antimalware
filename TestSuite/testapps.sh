#!/bin/sh
#
# Installs, tests, and uninstalls various apks for malware analysis.
#
# Brandon Amos
# 2012.08.10

# Just in case the adb command isn't available or multiple
# emulators are running
ADB=adb

# installAndMonkeyTest <apk name> <delay>
function monkeyTest {
    # System applications that don't need to be installed
    # are passed to this without the .apk extension
    if [[ $1 == *.apk ]]; then
        echo Installing application $1
        $ADB install $1
    fi

    startAntimalware $1

    # First, trim everything from the beginning of the name until the dash.
    # Then, trim the .apk extension from the end.
    package=`echo $1 | sed 's/.*\(-\)//' | sed 's/\(.apk\)$//'`

    echo Monkey testing application $package
    $ADB shell monkey -p $package --throttle $2 1200
    #$ADB shell monkey -p $package 100

    stopAntimalware $1
    
    if [[ $1 == *.apk ]]; then
        echo Uninstalling package $package
        $ADB uninstall $package
    fi
}

# startAntimalware <apk name>
function startAntimalware {
    echo Starting the antimalware application
    $ADB shell am start -a android.intent.action.MAIN \
        -n org.vt.magnum.antimalware.main/.MalwareActivity

    # Let the application start 
    sleep 5

    # Detect the classification from the name
    if [[ $1 == $MODE/M* ]]; then
        CLASS=negative
    else
        CLASS=positive
    fi

    echo Setting the classification to $CLASS
    $ADB shell "echo $CLASS > /sdcard/magnum/classification"
}

# Stops the antimalware application and pulls the arff file
# stopAntimalware <apk name>
function stopAntimalware {
    echo Pulling the arff for $1
    $ADB pull /sdcard/magnum/malware.arff ../arff/tmp/$1.arff

    echo Stopping the antimalware application
    $ADB shell am force-stop "org.vt.magnum.antimalware.main"
}

# Combines the separately collected arff files.
function combineArff {
    echo Combining the arff files
    cd ../arff/tmp/$MODE/
    TIME=$(date +"%Y-%m-%d-%H-%M")

    # Get the header from a random arff file
    sed '1,/@data/!d' `ls *.arff | head -1` > tmpTotal.txt

    # Loop through arff files to combine them
    for file in *.arff
    do
        # Delete the header
        sed '1,/@data/d' $file > tmpArff.txt

        # Delete the first line because it's always positive
        sed '1d' tmpArff.txt >> tmpTotal.txt
        echo >> tmpTotal.txt
    done

    rm tmpArff.txt
    mv tmpTotal.txt ../../malware-$MODE-$TIME.arff
}

#########
# Start #
#########

if [[ $# != 1 || ( $1 != "Training" && $1 != "Testing" ) ]]; then
    echo "Usage: ./testapps.sh <Testing/Training>"
    exit 1
fi

# Get the mode we're currently running in
MODE=$1

echo Cleaning up the temporary directory
rm -rf ../arff/tmp/*

echo Uninstalling the antimalware application, if it exists
$ADB uninstall org.vt.magnum.antimalware.main

echo Installing the antimalware application
$ADB install ../Antimalware/bin/Antimalware.apk

delay=$(( ($RANDOM % 1501) + 250 ))

# System applications have a .sysapk extension so
# this script won't reinstall them.
# (This was done to easily manage the system applications)
ls $1/*apk | sort -R | while read application; do
    monkeyTest $application $delay
done

combineArff

exit 0
