package org.vt.magnum.antimalware.features;

import java.util.ArrayList;

import weka.core.Attribute;
import weka.core.DenseInstance;
import weka.core.Instance;

/**
 * Gets memory features by parsing /proc/meminfo.
 * @author Brandon Amos
 * @version 2012.08.10
 */
public class MemoryFeatures implements IFeatures {
	// From /proc/meminfo
	private int _active;
	private int _inactive;
	
	private int _mapped;
	
	// From /proc/vmstat
	private int _freePages;
	private int _anonPages;
	private int _filePages;
	private int _dirtyPages;
	private int _writebackPages;
	
	//TODO: Get these
	// Garbage_Collections
	// DMA_Allocations
	// Page_Frees
	// Page_Activations
	// Page_Deactivations
	// Minor_Page_Fault
	
	private WekaHelper _wh;
	private FileParser _fp;
	private ArrayList<Attribute> _attributes;
	private Instance _instance;
	
	public MemoryFeatures() {
		_wh = WekaHelper.getInstance();
		_fp = new FileParser();
		_attributes = _wh.createNumAttributeList(
				"memActive", "memInactive", "memMapped", "memFreePages", "memAnonPages",
				"memFilePages", "memDirtyPages", "memWritebackPages" );
	}
	
	public void fetchData() {
		try
	    {
			_fp.load( "/proc/meminfo" );
			
			_active = _fp.readInt( 5, 1 );
			_inactive = _fp.readInt( 6, 1 );
			
			_mapped = _fp.readInt( 18, 1 );
			
			_fp.close();
			
			
			_fp.load( "/proc/vmstat" );
			
			_freePages = _fp.readInt( 0, 1 );
			_anonPages = _fp.readInt( 7, 1 );
			_filePages = _fp.readInt( 9, 1 );
			_dirtyPages = _fp.readInt( 10, 1 );
			_writebackPages = _fp.readInt( 11, 1 );
			
			_fp.close();
			
	    }
	    catch( Exception ex )
	    {
	        ex.printStackTrace();           
	    }
	}
	
	public Instance getInstance() {
		fetchData();
		
		_wh.resetAttributes(_attributes);
		
		_instance = new DenseInstance(_attributes.size());
		
		_wh.setInstance(_instance, _attributes, 
			_active, _inactive, _mapped, _freePages, _anonPages,
			_filePages, _dirtyPages, _writebackPages );
	
		return _instance;
	}
	
	public ArrayList<Attribute> getAttributes() {
		return _attributes;
	}
	
}
